<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberInfo">

<!-- 회원 정보 꺼내기 -->
<select id="loginMember" parameterType="hashmap" resultType="hashmap">
	<![CDATA[	
		SELECT * FROM
		MEMBER
		WHERE MEMBER_ID = #{MEMBER_ID}	AND MEMBER_PASSWD = #{MEMBER_PASSWD}	
	]]>
	</select>
	
<!-- 회원 정보 꺼내기 -->
	<select id="selectMember" parameterType="hashmap" resultType="hashmap">
	<![CDATA[	
		SELECT * FROM
		MEMBER
		WHERE MEMBER_ID = #{MEMBER_ID}
	]]>
	</select>
	
	<!-- 회원가입 -->
	<insert id="joinMember" parameterType="hashmap" useGeneratedKeys="true" keyProperty="MEMBER_NUM">
	<selectKey keyProperty="MEMBER_NUM" resultType="string" order="BEFORE">
			SELECT MEMBER_NUM_SEQ.NEXTVAL FROM DUAL
	</selectKey>
	<![CDATA[
		INSERT 
		INTO MEMBER( 
			 MEMBER_NUM,
			 MEMBER_ID,
			 MEMBER_NAME,
			 MEMBER_EMAIL,
			 MEMBER_PASSWD,
			 MEMBER_PHONE,
			 MEMBER_DATE
		)VALUES(
			#{MEMBER_NUM},
			#{MEMBER_ID},
			#{MEMBER_NAME},
			#{MEMBER_EMAIL},
			#{MEMBER_PASSWD},
			#{MEMBER_PHONE},
			SYSDATE
		)
	]]>
</insert>

<!-- 아이디찾기 -->
<select id="findId" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT
		MEMBER_ID
	FROM
		MEMBER
	WHERE
		MEMBER_NAME = #{MEMBER_NAME}
		AND MEMBER_EMAIL = #{MEMBER_EMAIL}
]]>
</select>
<!-- 비밀번호 찾기 -->
<select id="findPwd" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT
		MEMBER_PASSWD,
		MEMBER_ID,
		MEMBER_NAME,
		MEMBER_EMAIL
	FROM
		MEMBER
	WHERE 
		MEMBER_ID = #{MEMBER_ID}
	    AND MEMBER_NAME = #{MEMBER_NAME}
	    AND MEMBER_EMAIL = #{MEMBER_EMAIL}
]]>
</select>

<!-- 비밀번호 변경 -->
<update id="chgPw" parameterType="hashmap">
<![CDATA[
	UPDATE
		MEMBER
	SET
		MEMBER_PASSWD = #{MEMBER_PASSWD_C}
	WHERE
		MEMBER_ID = #{MEMBER_ID}
		AND MEMBER_NAME  = #{MEMBER_NAME}
		AND MEMBER_EMAIL = #{MEMBER_EMAIL}			
]]>
</update>

<!-- 비밀번호 변경2(id값만 가지고 변경) -->
<update id="chgPw2" parameterType="hashmap">
<![CDATA[
	UPDATE 
		MEMBER
	SET
		MEMBER_PASSWD = #{MEMBER_PASSWD}
	WHERE
		MEMBER_ID = #{MEMBER_ID}
]]>
</update>

<!-- 회원 탈퇴 -->
<update id="deleteMember" parameterType="hashmap" >
<![CDATA[
		UPDATE
		MEMBER SET 
		MEMBER_STATE = 2
		WHERE MEMBER_NUM = #{MEMBER_NUM}
	]]>
</update>

<!-- 회원 주문 내역 조회 -->
<select id="findmemberOrderList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT A.ORDER_NUM, D.GOODS_IMG,	B.GOODS_NAME, F.ORDER_AMOUNT_SUM, 
     			E.ORDER_PAY_SUM, A.ORDER_PAYMENT, A.ORDER_DATE, A.MEMBER_NUM, G.COUNTS
		FROM ORDERS A, GOODS B, GOODS_IMG D, 
        		(SELECT ORDER_NUM, SUM(ORDER_PRICE) AS ORDER_PAY_SUM FROM ORDERS GROUP BY ORDER_NUM) E,
        		(SELECT ORDER_NUM,SUM(ORDER_AMOUNT) AS ORDER_AMOUNT_SUM FROM ORDERS GROUP BY ORDER_NUM) F,
            	(SELECT ORDER_NUM, COUNT(GOODS_NUM) AS COUNTS FROM ORDERS GROUP BY ORDER_NUM ) G
		
	WHERE 
   		A.MEMBER_NUM = #{MEMBER_NUM}
		AND A.ORDER_NUM = E.ORDER_NUM
	      		AND A.ORDER_NUM = F.ORDER_NUM
				AND A.GOODS_NUM = B.GOODS_NUM 
				AND B.GOODS_NUM = D.GOODS_NUM
	      		AND G.ORDER_NUM = A.ORDER_NUM
		ORDER BY A.ORDER_DATE DESC, A.ORDER_NUM DESC
]]>
</select>

<!-- 결제 완료된 주문 목록 확인 -->
<select id="endOrderList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT * FROM (
		SELECT 
			GOODS_NUM,
			ORDER_NUM,
	 		ORDER_AMOUNT,
	 		MEMBER_NUM,
	 		ORDER_PAYMENT,
	 		ORDER_ECHECK,
	 		ORDER_PRICE,
	 		GOODS_NAME,
	 		GOODS_DCPRICE,
	 		ORDER_DATE 
		FROM 
			ORDERS NATURAL JOIN GOODS
		) A 
	WHERE A.ORDER_PAYMENT='Y' 
	AND A.MEMBER_NUM = #{MEMBER_NUM} 
	ORDER BY A.ORDER_DATE DESC;
]]>
</select>
<!-- 주문 취소 -->
<update id="orderCancel" parameterType="hashmap">
	<![CDATA[
	UPDATE
	ORDERS SET
		ORDER_PAYMENT = 'C' 
	WHERE
		ORDER_NUM = #{ORDER_NUM}
	</update>
	]]>
	</update>
<!-- 1:1 문의 insert -->
<insert id="insertQna" parameterType="hashmap" useGeneratedKeys="true" keyProperty="QNA_NUM">
		<selectKey keyProperty="QNA_NUM" resultType="string" order="BEFORE">
			SELECT NOTICE_NUM_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		<![CDATA[
		INSERT INTO QNA ( 
      QNA_NUM,
      QNA_CATEGORY,
      MEMBER_NUM,
      QNA_TITLE,
      QNA_CNT,
      QNA_CHECK,
      QNA_DATE,
      QNA_FILE
      )
   VALUES 
      (#{QNA_NUM},
      #{QNA_CATEGORY},
      #{MEMBER_NUM},
      #{QNA_TITLE},
      #{QNA_CNT},
      'N',
      SYSDATE,
      #{QNA_FILE})
		]]>
	</insert>
	
<!-- 1:1 qna 본인이 쓴 목록 확인 -->
	<select id="findQnaList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT
		*
	FROM 
		QNA 
	WHERE 
		MEMBER_NUM = #{MEMBER_NUM}
    ORDER BY 
		QNA_DATE DESC
]]>
</select>

<!-- qna 상세보기 -->
<select id="qnaDetail" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT * 
	FROM
	   QNA 
	WHERE QNA_NUM = #{QNA_NUM}
]]>
</select>

<!-- 구매후기 목록 -->
<select id="reviewList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT R.REVIEW_NUM,
      G.GOODS_NAME,
      M.MEMBER_ID,
      R.REVIEW_CNT,
      R.REVIEW_IMG,
      R.REVIEW_GRADE,
      R.REVIEW_REGDATE
	FROM
		REVIEW R, 
		GOODS G, 
		MEMBER M
	WHERE
    	R.MEMBER_NUM=#{MEMBER_NUM}
		AND R.MEMBER_NUM=M.MEMBER_NUM
		AND R.GOODS_NUM=G.GOODS_NUM
	ORDER BY 
		REVIEW_NUM DESC
]]>
</select>


<select id="checkMember" parameterType="hashmap" resultType="integer">
<![CDATA[
	SELECT 
		COUNT(MEMBER_EMAIL)
	FROM
		MEMBER
	WHERE
		MEMBER_EMAIL = #{MEMBER_EMAIL}
]]>
</select>

<!-- 회원 아이디 중복체크 -->
<select id="memberCheck" parameterType="hashmap" resultType="Integer">
<![CDATA[
	 
	SELECT
		COUNT(MEMBER_ID)
	FROM
		MEMBER
	WHERE
		MEMBER_ID = #{MEMBER_ID} 

]]>
</select>

<!-- 회원 정보 진입시 비밀번호 체크 -->
<select id="userPwCheck" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT
		MEMBER_ADMIN
	FROM
		MEMBER
	WHERE
		MEMBER_ID = #{MEMBER_ID}
		AND MEMBER_PASSWD = #{MEMBER_PASSWD}
]]>
</select>

<!-- 유저정보 수정 -->
<update id="userInfoUpdate" parameterType="hashmap">
<![CDATA[
	UPDATE
		MEMBER
	SET
		MEMBER_EMAIL = #{MEMBER_EMAIL},
		MEMBER_PHONE = #{MEMBER_PHONE}
	WHERE
		MEMBER_ID = #{MEMBER_ID}
]]>
</update>
</mapper>